//- TODO: Helllllpppmeeeeeee
- var isChannelModelAvailable = channel && (typeof channel.get === 'function')

.DropdownHover__trigger
  span.NewChannel
    span New channel

.Dropdown.js-dropdown
  .ChannelCreate
    .ChannelCreate__block(
      class="Color--channel-#{isChannelModelAvailable && channel.get('status')}"
    )
      input.Input.ChannelCreate__input.js-title(
        class="ChannelCreate__input--#{isChannelModelAvailable && channel.get('status')}"
        name='title'
        value= isChannelModelAvailable && channel.get('title')
        placeholder='Type channel name'
        autocomplete='off'
      )

      .ChannelCreate__metadata
        | by #{user.get('username')}
        br
        | 0 blocks

  .ChannelCreatePrivacy
    .ChannelCreatePrivacy__label
      | Select channel privacy:

    .ChannelCreatePrivacy__selector
      a.js-status(
        data-value='public'
        data-selected=(isChannelModelAvailable && channel.get('status') === 'public' ? true : undefined)
      ) Open
      span.Separator
      a.js-status(
        data-value='closed'
        data-selected=(isChannelModelAvailable && channel.get('status') === 'closed' ? true : undefined)
      ) Closed
      span.Separator
      a.js-status(
        data-value='private'
        data-selected=(isChannelModelAvailable && channel.get('status') === 'private' ? true : undefined)
      ) Private

    .ChannelCreatePrivacy__caption
      case (isChannelModelAvailable && channel.get('status'))
        when 'public'
          | Everyone can view the channel and anyone logged-in can add to it.
        when 'closed'
          | Everyone can view the channel but only you and your collaborators can add to it.
        when 'private'
          | Only you and your collaborators can view and add to the channel.

  .ChannelCreateSubmit
    a.Button.Button--divider.js-create
      | Create channel
