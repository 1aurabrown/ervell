{
  "name": "bucket-assets",
  "version": "0.2.11",
  "description": "Uploads a folder of static assets to an s3 bucket with convenient assumptions.",
  "keywords": [
    "s3",
    "assets",
    "bucket"
  ],
  "bin": {
    "bucket-assets": "./bin/bucket-assets.js"
  },
  "author": {
    "name": "Craig Spaeth",
    "email": "craigspaeth@gmail.com",
    "url": "http://craigspaeth.com"
  },
  "contributors": [
    {
      "name": "Brennan Moore",
      "email": "brennanmoore@gmail.com",
      "url": "http://brennanmoore.com"
    }
  ],
  "engines": {
    "node": ">= 0.10.x"
  },
  "scripts": {
    "test": "mocha test/test.js -r should",
    "example": "./bin/bucketassets.js && node example/app.js"
  },
  "dependencies": {
    "async": "^0.9.0",
    "commander": "^2.8.1",
    "glob": "^5.0.5",
    "knox": "^0.9.2",
    "mime": "^1.3.4",
    "superagent": "^1.2.0",
    "underscore": "^1.8.3"
  },
  "devDependencies": {
    "mocha": "^2.2.4",
    "rewire": "^2.3.3",
    "should": "^6.0.1",
    "sinon": "^1.14.1",
    "jade": "^1.9.2",
    "express": "^4.12.3"
  },
  "readme": "# bucket-assets\n\nUploads a folder of static assets to an s3 bucket with convenient features. These include:\n\n* Fingerprints asset package based on file contents\n* Uploads a manifest file that stores a git hash to make rollback easy (first checks for the COMMIT_HASH env variable then runs a `git rev-parse HEAD`)\n* Provides middleware to easily point to your uploaded assets\n* Adds appropriate s3 headers like setting files to 'public-read' and 'Content-Type'.\n\nBucket Assets is used in deploys of Artsy apps, but may be useful for you too.\n\n## Example\n\nRun the CLI in your deployment process.\n_You may omit these arguments if you use the defaults below._\n\n````\nbucket-assets \\\n  --files **/public/** \\\n  --secret s3-secret \\\n  --key s3-key \\\n  --bucket force-production \\\n  --fingerprint true\n````\n\nAdd the middleware to your app\n\n````javascript\nvar bucketAssets = require('bucket-assets');\napp.use(bucketAssets({\n\n  // Glob that defaults to finding all files in \"public\" folders that\n  // are children of process.cwd() e.g. /public + /components/modal/public.\n  // Will always ignore public folders in node_modules.\n  files: __dirname + '/**/public/**',\n\n  // Defaults to \"public\". The name of the folder that is the root static\n  // directory so relative paths work the same locally as they do on the CDN.\n  root: 'public',\n\n  // Defaults to process.env.S3_KEY\n  key: 's3-key',\n\n  // Defaults to process.env.S3_SECRET\n  secret: 's3-secret',\n\n  // Defaults to process.env.S3_BUCKET\n  bucket: 'force-production',\n\n  // Defaults to process.env.CDN_URL\n  cdnUrl: '//xyz.cloudfront.net/',\n\n  // Defaults to true. Use `false` to not use fingerprinting.\n  fingerprint: true\n}));\n````\n\nUse the view helper to point to the fingerprinted CDN assets in production or staging.\n\n````jade\nhead\n  link( type='text/css', rel='stylesheet', href=asset('main.css') )\nbody\n  script( src=asset('main.js') )\n````\n\n## With Heroku\n\nBe sure to set env variables for production/staging if you're relying on the defaults\n\nOn your CI machine\n````\nS3_KEY=\nS3_SECRET=\n````\n\nRun with deploy script\n````\nheroku config:set COMMIT_HASH=$(shell git rev-parse --short HEAD)\n````\n\nSet once\n````\nheroku config:set CDN_URL=\n````\n\n## Contributing\n\nPlease fork the project and submit a pull request with tests. Install node modules `npm install` and run tests with `npm test`.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "bucket-assets@0.2.11",
  "_shasum": "875aa15a0f7891f250936b5ff83c1b191edc675b",
  "_resolved": "git://github.com/artsy/bucket-assets.git#491614aaabc72cf579e4f751344e4cb0649b5709",
  "_from": "bucket-assets@*"
}
